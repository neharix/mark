# Generated by Django 5.1.1 on 2024-10-03 12:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Criteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=400, verbose_name='Kriteriýa aňlatmalary')),
                ('max_value', models.IntegerField(verbose_name='Göterimi')),
            ],
            options={
                'verbose_name': 'kriteriýa',
                'verbose_name_plural': 'kriteriýalar',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ugur')),
            ],
            options={
                'verbose_name': 'ugur',
                'verbose_name_plural': 'ugurlar',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personality_type', models.CharField(choices=[('Fiziki', 'Fiziki'), ('Ýuridiki', 'Ýuridiki')], default='Fiziki', max_length=50, verbose_name='Şahs görnüşi')),
                ('agency', models.CharField(max_length=200, verbose_name='Edara')),
                ('place_of_residence', models.CharField(max_length=200, verbose_name='Ýaşaýan ýeri')),
                ('full_name_of_manager', models.CharField(max_length=200, verbose_name='Topar ýolbaşçysynyň F.A.Aa')),
                ('full_name_of_second_participant', models.CharField(blank=True, max_length=200, null=True, verbose_name='Toparyň ikinji agzasyňyň F.A.Aa')),
                ('full_name_of_third_participant', models.CharField(blank=True, max_length=200, null=True, verbose_name='Toparyň üçinji agzasyňyň F.A.Aa')),
                ('phone_number', models.CharField(max_length=8, verbose_name='Telefon belgi')),
                ('additional_phone_number', models.CharField(max_length=8, verbose_name='Telefon belgi')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Taslamanyň beýany')),
                ('rated', models.BooleanField(default=False)),
                ('p_copy_page1', models.ImageField(upload_to='passport_copies/1/', verbose_name='Topar ýolbaşçysynyň pasport nusgasy (sahypa 1)')),
                ('p_copy_page2_3', models.ImageField(upload_to='passport_copies/2-3/', verbose_name='Topar ýolbaşçysynyň pasport nusgasy (sahypa 2-3)')),
                ('p_copy_page5_6', models.ImageField(upload_to='passport_copies/5-6/', verbose_name='Topar ýolbaşçysynyň pasport nusgasy (sahypa 5-6)')),
                ('p_copy_page32', models.ImageField(upload_to='passport_copies/32/', verbose_name='Topar ýolbaşçysynyň pasport nusgasy (sahypa 32)')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.direction', verbose_name='Ugry')),
            ],
            options={
                'verbose_name': 'taslama',
                'verbose_name_plural': 'taslamalar',
            },
        ),
        migrations.CreateModel(
            name='Quene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quene_json', models.TextField(verbose_name='Reje JSON-y')),
                ('date', models.DateField(verbose_name='Senesi')),
                ('juries', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Emin agzalar')),
            ],
            options={
                'verbose_name': 'reje',
                'verbose_name_plural': 'rejeler',
            },
        ),
    ]
